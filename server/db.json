{
    "users": [
        {
            "id": 1,
            "name": "Andrey Bo4arov",
            "age": 24,
            "nickname": "andrea"
        },
        {
            "id": 2,
            "name": "Arab Arab",
            "age": 28,
            "nickname": "arab"
        },
        {
            "id": 3,
            "name": "Alexey Bereg",
            "age": 18,
            "nickname": "alex"
        },
        {
            "id": 4,
            "name": "Stariy Ded",
            "age": 43,
            "nickname": "ded"
        }
    ],
    "articles": [
        {
            "id": 1,
            "title": "Ресайклинг по-норвежски: ЦОДам предложили направлять излишки тепла на обогрев помещений",
            "author": 3,
            "text": "В Норвегии изучают вопрос вторичного использования тепла, выделяемого ЦОД. Предполагается, что тепло можно направить на бытовые и общественные нужды — обогрев зданий, производств, для рыбных хозяйств.\n\nПредложение поступило от Министра энергетики Норвегии — Тины Бру (Tina Bru). Инициатива распространяется на все компании с установленными крупными энергетическими установками."
        },
        {
            "id": 2,
            "title": "Почему язык Go стал стандартом для DevOps-инженеров",
            "author": 2,
            "text": "Иногда вещи находят себе применение неожиданно и не в том, для чего их задумывали.\n\nВ 1960-е годы Кен Томпсон — легенда программирования — написал компьютерную игру Space Travel для операционной системы Multics. Система была проектом компании Bell Lab, где он работал вместе с Денисом Ритчи. Позже проект закрыли, и чтобы продолжать играть в свою Space Travel, Томпсон решил портировать ее на компьютер PDP-7. Инструменты, которые он создал для порта, затем легли в основу операционной системы Unix. \n\nТомпсон написал в одиночку первые три версии. Для Unix был нужен системный язык — так появился B. Позже Денис Ритчи, коллега и друг Томпсона, подхватил разработку и написал язык C. Вот так в основе почти всего, на чем построены современные технологии, лежало желание поиграть в компьютерную игру и пет-проекты для забавы.\n\nКен Томпсон построил блестящую карьеру исследователя в области computer science. В середине 2000-х он устроился в Google, где вместе с Робом Пайком и Робертом Грейсмером создал Golang — один из самых популярных языков последнего времени."
        },
        {
            "id": 3,
            "title": "Использование Google Protocol Buffers (protobuf) в Java",
            "author": 2,
            "text": "Недавно вышло третье издание книги \"Effective Java\" («Java: эффективное программирование»), и мне было интересно, что появилось нового в этой классической книге по Java, так как предыдущее издание охватывало только Java 6. Очевидно, что появились совершенно новые разделы, связанные с Java 7, Java 8 и Java 9, такие как глава 7 \"Lambdas and Streams\" («Лямбда-выражения и потоки»), раздел 9 \"Prefer try-with-resources to try-finally\" (в русском издании «2.9. Предпочитайте try-с-ресурсами использованию try-finally») и раздел 55 \"Return optionals judiciously\" (в русском издании «8.7. Возвращайте Optional с осторожностью»). Но я был слегка удивлен, когда обнаружил новый раздел, не связанный с нововведениями в Java, а обусловленный изменениями в мире разработки программного обеспечения. Именно этот раздел 85 \"Prefer alternatives to Java Serialization\" (в русском издании «12.1 Предпочитайте альтернативы сериализации Java») и побудил меня написать данную статью об использовании Google Protocol Buffers в Java."
        },
        {
            "id": 4,
            "title": "Как выбрать мобильную кросс-платформу в 2021 году",
            "author": 4,
            "private": true,
            "text": "Кросс-платформенные решения - тренд в мобильной разработке. Уже есть различные технологии от PWA до Flutter и Kotlin Multiplatform. Как выбрать среди них?\n\nНовый развивающийся бизнес зачастую в первую очередь ориентируется на мобильные технологии: социальные сети, необанкинговые решения, приложения для электронной коммерции, такси и другие. Новый бизнес ориентирован на экономическую эффективность, поэтому переход на кросс-платформенность для разработки мобильного приложения кажется правильным выбором. Посмотрим, что будет в 2021 году и как выбрать правильную технологию."
        },
        {
            "id": 5,
            "title": "Одноплатник Pimoroni Tiny 2040 — улучшенный аналог Raspberry Pi Pico, размером всего в треть «малинки»",
            "author": 4,
            "text": "В январе мы публиковали обзор одноплатника Raspberry Pi Pico. В целом, соотношение цена/качество на высоте. Но многим пользователям платы не хватает дополнительных функций.\n\nИ вот сейчас появилась альтернатива, причем на основе SoC Raspberry RP2040, но с большим набором возможностей (забегая наперед — это не модуль беспроводной связи). Плюс ко всему, размер новинки всего третья часть от Raspberry Pi Pico. Называется это чудо технической мысли Pimoroni Tiny 2040."
        },
        {
            "id": 6,
            "title": "Как атаковали промышленную инфраструктуру на The Standoff: анализ трафика с помощью PT ISIM",
            "author": 4,
            "text": "На прошедшем The Standoff эксперты PT Expert Security Center, в данном случае представляющие команду глобального SOC киберполигона, мониторили действия команд атакующих и защитников цифровой копии мегаполиса FF, противостояние проходило в режиме реального времени и длилось 123 часа. Ранее мы писали о том, как глобальный SOC следил за всем происходящим в инфраструктуре виртуального города, как отдел обнаружения вредоносного ПО вылавливал и исследовал троянские программы «редтимеров» с помощью песочницы PT Sandbox и как мы следили за всеми веб-ресурсами киберполигона с помощью PT Application Firewall. Теперь поговорим о защищенности технологических сетей объектов виртуального города и результатах мониторинга, проведенного с помощью системы глубокого анализа технологического трафика PT Industrial Security Incident Manager (PT ISIM).\n\nВ этой статье мы расскажем о том, какие атаки на технологический сегмент сети объектов города детектировала система, и отметим, насколько эти угрозы соответствуют реальному уровню защищенности промышленных систем."
        },
        {
            "id": 7,
            "title": "Что такое процессное управление",
            "author": 1,
            "text": "В статье описаны наиболее распространенные модели управления, которые используются в российских в компании. В частности, дан сравнительный анализ характеристик функциональному и процессному подходу к организации системы управления.\n\nПроцессный подход был сформулирован во второй половине прошлого века и до сих пор остается одним из наиболее эффективных методов организации системы управления в компании. Краеугольным камнем данной методологии является понятие «процесс». Процесс — это совокупность взаимосвязанных видов деятельности, преобразующая входы в выходы, которые имеют ценность для потребителя. Таким образом, концепция процессного подхода, как системы управления, заключается в выделении конкретных бизнес-процессов компании, определении одного из участников в качестве владельца бизнес-процесса и делегировании ему полномочий и ответственности по управлению данным процессом.\n\nВ данном случае компания рассматривается, как система отдельных видов деятельности (бизнес-процессов), направленных на достижение конкретного результата и осуществляющих взаимодействие друг с другом посредством входов и выходов. В качестве входов в процессной методологии могут выступать: информация, документация, материалы, оборудование, человеческие ресурсы и так далее. Выходами бизнес-процессов является результат деятельности, который имеет ценность как для внешнего заказчика, так и для внутреннего. Стоит отметить, что важной отличительной особенностью процессного подхода от других моделей управления является не только выделение бизнес-процессов, но и постоянное их совершенствование.\n\nК сожалению, несмотря на все достоинства и преимущества процессной методологии до сих пор в большинстве отечественных компаний используется функциональная модель управления. В отличие от процессного, в основе концепции функционального подхода к управлению делегирование полномочий и ответственности осуществляется через выполняемые функции. Другими словами, функциональный подход заключается в объединении сотрудников в отдельные структурные бизнес-единицы (отделы, департаменты и прочее) по принципу однообразия выполняемой деятельности с жесткой вертикальной иерархией."
        }
    ]
}